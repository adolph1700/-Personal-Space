Option Explicit

'========= constants you must fill =========
Const TENANT      As String = "common"                     'or your tenantId
Const CLIENT_ID   As String = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
Const SCOPE       As String = "https://graph.microsoft.com/User.Read"
'===========================================

Sub GetToken_DeviceCode()
    Dim dcInfo As Dictionary: Set dcInfo = StartDeviceCode()
    If dcInfo Is Nothing Then Exit Sub
    
    MsgBox "Please open " & dcInfo("verification_uri") & _
           " and enter code: " & dcInfo("user_code"), _
           vbInformation, "Sign-in Required"
    
    'Optionally auto-open browser
    Shell "cmd /c start " & dcInfo("verification_uri"), vbHide
    
    Dim token As Dictionary
    token = PollForToken(dcInfo("device_code"), dcInfo("interval"))
    If Not token Is Nothing Then
        Debug.Print "ACCESS TOKEN:" & vbCrLf & token("access_token")
    End If
End Sub

'--- step A: get device_code ----------------
Function StartDeviceCode() As Dictionary
    Dim url As String, body As String, json As Dictionary
    url = "https://login.microsoftonline.com/" & TENANT & "/oauth2/v2.0/devicecode"
    body = "client_id=" & urlencode(CLIENT_ID) & _
           "&scope=" & urlencode(SCOPE)
    
    Set json = HttpPostForm(url, body)
    If json Is Nothing Then Exit Function
    
    If json.Exists("device_code") Then
        Set StartDeviceCode = json
    Else
        MsgBox "Failed: " & json("error") & " - " & json("error_description")
    End If
End Function

'--- step E: poll /token until 200 ---------- 
Function PollForToken(deviceCode As String, intervalSec As Long) As Dictionary
    Dim url As String, body As String, started As Date
    url = "https://login.microsoftonline.com/" & TENANT & "/oauth2/v2.0/token"
    body = "grant_type=urn:ietf:params:oauth:grant-type:device_code" & _
           "&client_id=" & urlencode(CLIENT_ID) & _
           "&device_code=" & urlencode(deviceCode)
    
    started = Now
    Do
        Dim json As Dictionary: Set json = HttpPostForm(url, body)
        If json Is Nothing Then Exit Do
        
        Select Case json("status")   'status is custom wrapper (see helper)
            Case 200
                Set PollForToken = json: Exit Function
            Case 400
                Select Case json("error")
                    Case "authorization_pending":   'user hasnâ€™t finished yet
                        'just continue polling
                    Case "slow_down":
                        intervalSec = intervalSec + 5
                    Case "expired_token", "access_denied"
                        MsgBox "Auth failed: " & json("error_description")
                        Exit Do
                End Select
        End Select
        DoEvents
        Application.Wait Now + TimeSerial(0, 0, intervalSec)
    Loop While DateDiff("s", started, Now) < 900   '15-minute safety cut-off
End Function

'========= tiny HTTP & JSON helpers =========
Function HttpPostForm(url As String, body As String) As Dictionary
    Dim http As Object: Set http = CreateObject("MSXML2.XMLHTTP.6.0")
    http.Open "POST", url, False
    http.setRequestHeader "Content-Type", "application/x-www-form-urlencoded"
    http.send body
    
    Dim result As Dictionary
    Set result = JsonConverter.ParseJson(http.responseText)
    result.Add "status", http.Status
    Set HttpPostForm = result
End Function

Function urlencode(str As String) As String
    Dim i&, c$, o$
    For i = 1 To Len(str)
        c = Mid$(str, i, 1)
        If c Like "[A-Za-z0-9-_.~]" Then
            o = o & c
        Else
            o = o & "%" & Hex(AscW(c))
        End If
    Next: urlencode = o
End Function
